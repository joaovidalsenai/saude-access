<!DOCTYPE html>
<html lang="pt-br" data-theme="light">
<head>
    <meta charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/styleGenerico.css" /><link rel="stylesheet" href="/css/hospitais.css" />
    <title>Saúde Access - Hospitais</title>
    <link rel="stylesheet" href="/css/protected.css" />
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <script src="/js/global.js"></script><script src="/js/auth-utils.js" defer></script>
    <!-- CSS adicionado para garantir o layout de nota + nome/distância -->
    <style>
        .botao-hospital {
            display: flex;
            align-items: center;
            gap: 15px; /* Espaço entre a bolinha da nota e o texto */
            text-decoration: none;
            color: inherit;
        }
        .hospital-info {
            display: flex;
            align-items: baseline; /* Alinha o nome e a distância pela base */
            gap: 8px; /* Espaço entre o nome e a distância */
            flex-wrap: wrap; /* Permite que a distância quebre a linha em ecrãs pequenos */
        }
        .distancia {
            font-size: 0.9em;
            color: #555;
            font-weight: normal;
        }
    </style>
</head>
<body class="protected">
    <header>
        <h1><%= titulo %></h1>
        <% if (locals.erro) { %><div style="background-color: #ffdddd; color: #b71c1c; padding: 15px; text-align: center; margin: 1rem; border: 1px solid #b71c1c; border-radius: 8px;"><strong>Erro:</strong> <%= erro %></div><% } %>
    </header>
    <main>
        <form action="#" class="form-busca-hospital" onsubmit="return false;">
            <input type="search" name="pesquisar-hospitais" class="inp-busca-hospital" placeholder="Pesquisar hospital" autocomplete="off" />
            <button type="submit" class="btn-busca-hospital" aria-label="Pesquisar"><svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" viewBox="0 0 256 256"><path d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"></path></svg></button>
        </form>
        <div class="container-hospitais">
            <div class="div-butoes" id="lista-hospitais-container">
                <% if (hospitais && hospitais.length > 0) { %>
                    <% hospitais.forEach(hospital => { %>
                        <% if (hospital.hospital_endereco) { %>
                            <a href="/hospitais/detalhes?id=<%= hospital.hospital_id %>" class="botao-hospital" data-latitude="<%= hospital.hospital_endereco.hospital_latitude %>" data-longitude="<%= hospital.hospital_endereco.hospital_longitude %>">
                                <!-- Bolinha da Nota: usa a classe rating-X do seu CSS -->
                                <div class="botao-hospital-nota rating-<%= Math.round(hospital.media_avaliacoes || 0) %>"><%= (hospital.media_avaliacoes || 0).toFixed(1) %></div>
                                <!-- Container para o nome e a distância -->
                                <div class="hospital-info">
                                    <span class="botao-hospital-nome"><%= hospital.hospital_nome %></span>
                                    <small class="distancia">| Calculando...</small>
                                </div>
                            </a>
                        <% } %>
                    <% }); } %>
            </div>
            <p id="nenhum-hospital-encontrado" style="display: none; text-align: center; margin-top: 2rem;">Nenhum hospital encontrado.</p>
        </div>
    </main>
    <%- include ('partials/navbar.ejs') %>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(pos => {
                    atualizarDistanciasEOrdenar(pos.coords.latitude, pos.coords.longitude);
                }, () => {
                    document.querySelectorAll('.distancia').forEach(el => el.textContent = '| Localização negada');
                });
            }
            const searchInput = document.querySelector('.inp-busca-hospital');
            const hospitalsContainer = document.getElementById('lista-hospitais-container');
            const noResultsMessage = document.getElementById('nenhum-hospital-encontrado');
            searchInput.addEventListener('input', () => {
                const searchTerm = searchInput.value.toLowerCase().trim();
                const allHospitals = hospitalsContainer.querySelectorAll('.botao-hospital');
                let visibleCount = 0;
                allHospitals.forEach(hospital => {
                    const hospitalName = hospital.querySelector('.botao-hospital-nome').textContent.toLowerCase();
                    const isVisible = hospitalName.includes(searchTerm);
                    hospital.style.display = isVisible ? 'flex' : 'none';
                    if (isVisible) visibleCount++;
                });
                if (noResultsMessage) noResultsMessage.style.display = (visibleCount === 0 && allHospitals.length > 0) ? 'block' : 'none';
            });
        });
        function atualizarDistanciasEOrdenar(lat, lon) {
            const container = document.getElementById('lista-hospitais-container');
            const hospitais = Array.from(container.querySelectorAll('.botao-hospital'));
            hospitais.forEach(h => {
                const hLat = parseFloat(h.dataset.latitude), hLon = parseFloat(h.dataset.longitude);
                const distEl = h.querySelector('.distancia');
                if (!isNaN(hLat) && !isNaN(hLon)) {
                    const dist = calcularDistanciaHaversine(lat, lon, hLat, hLon);
                    h.dataset.distancia = dist;
                    distEl.textContent = `| ${dist.toFixed(1)} km`;
                } else { distEl.textContent = '| Dist. indisponível'; }
            });
            hospitais.sort((a, b) => (parseFloat(a.dataset.distancia || 'Infinity') - parseFloat(b.dataset.distancia || 'Infinity'))).forEach(h => container.appendChild(h));
        }
        function calcularDistanciaHaversine(lat1, lon1, lat2, lon2) {
            const R = 6371, dLat = (lat2-lat1)*Math.PI/180, dLon = (lon2-lon1)*Math.PI/180;
            const a = Math.sin(dLat/2)*Math.sin(dLat/2) + Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);
            return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)));
        }
    </script>
</body>
</html>

